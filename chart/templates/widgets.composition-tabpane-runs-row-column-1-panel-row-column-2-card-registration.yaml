apiVersion: v1
data:
  panel: "true"
kind: ConfigMap
metadata:
  name: composition-{{ .Release.Name }}-tabpane-runs-row-column-1-panel-row-column-2-card-registration
  namespace: {{ .Release.Namespace }}
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  name: composition-{{ .Release.Name }}-tabpane-runs-row-column-1-panel-row-column-2-card-registration
  namespace: {{ .Release.Namespace }}
spec:
  actions:
  - template:
      apiVersion: templates.krateo.io/v1alpha1
      name: composition-{{ .Release.Name }}-tabpane-runs-row-column-1-panel-row-column-2-card-registration-customform
      namespace: {{ .Release.Namespace }}
      resource: customforms
      verb: GET
  app:
    template:
      color: ${ .getCompositionDefinition.status.conditions[] | select(.type == "Ready") | if .status == "False" then "orange" elif .status == "True" then "green" else "grey" end }
      content: This is a card for MLFlow {{ .Release.Name }} model registration
      icon: fa-floppy-disk
      tags: {{ .Release.Namespace }},0.0.2
      title: MLFlow {{ .Release.Name }} Model Registration
      status: ${ .getCompositionDefinition.status.conditions[] | select(.type == "Ready") | "Ready:" + .status }
      date: ${ .getCompositionDefinition.metadata.creationTimestamp }
  propsRef:
    name: composition-{{ .Release.Name }}-tabpane-runs-row-column-1-panel-row-column-2-card-registration
    namespace: {{ .Release.Namespace }}
  type: card
  api:
  - name: getCompositionDefinition
    path: "/apis/core.krateo.io/v1alpha1/namespaces/mlflow-system/compositiondefinitions/mlflow-registration"
    verb: GET
    headers:
    - 'Accept: application/json'